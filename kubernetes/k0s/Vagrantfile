# Naming
BASE_NAME = "k0s"

# Image
BASE_IMAGE =  "bento/ubuntu-22.04" #"generic/ubuntu2004"#"ubuntu/trusty64" #"ubuntu/bionic64"
BASE_IMAGE_VERSION =  "202309.08.0"

# How many VMs to create. We need at least:
# -initial_controller = must contain a single node that creates the worker and server tokens needed by the other nodes.
# -controller = can contain nodes that, together with the host from initial_controller form a highly available isolated control plane.
# -worker = must contain at least one node so that we can deploy Kubernetes objects.

NUM_INITIAL_CONTROLLERS = 1
NUM_CONTROLLERS = 1
NUM_WORKERS = 1
 
VMS = NUM_INITIAL_CONTROLLERS + NUM_CONTROLLERS + NUM_WORKERS

# Resources configuration
VB_CPUS = 2
VB_MEMORY = 1024

# Private keys routes
USER_DIR_PATH = "/home/aagustin"
PUB_KEY_PATH = "/home/aagustin/.ssh/k0s_key.pub"
PRIV_KEY_PATH ="/home/aagustin/.ssh/k0s_key"
   
# IP configuration  
BASE_PRIV_IP = "192.168.55"
BASE_PUB_IP = "192.168.102"
START_IP = 50

GATEWAY_IP = "#{BASE_PUB_IP}.1"
NAMESERVER_IP = "8.8.8.8"

PRIV_NET_MASK = "255.255.255.0"
PUB_NET_MASK = "255.255.255.0"

# Bridged interface
BRIDGED_IFACE = "wlo1"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

Vagrant.configure("2") do |config|
    
  # Image configuration (for all vm's)
  config.vm.box = BASE_IMAGE
  config.vm.box_version = BASE_IMAGE_VERSION

  # SSH (for all vm's)
  config.ssh.insert_key = false 
  config.ssh.private_key_path = ["#{USER_DIR_PATH}/.vagrant.d/insecure_private_key",PRIV_KEY_PATH] 
    
  config.vm.provision "file",
    source: PUB_KEY_PATH,
    destination: "/home/vagrant/.ssh/authorized_keys"
  
  # Declaring nodes (iteratively)
  (1..VMS).each do |i|
    config.vm.define "#{BASE_NAME}-#{i}" do |node|
     
      # Define hostname
      node.vm.hostname =  "#{BASE_NAME}-#{i}.example.com"
 
      # Resources (provider)
      node.vm.provider "virtualbox" do |vb|
        vb.gui = false
        vb.name = "#{BASE_NAME}-#{i}"
        vb.memory = "#{VB_MEMORY}"
        vb.cpus = "#{VB_CPUS}"
      end

      # Network configuration
      node.vm.network "public_network",
        bridge: BRIDGED_IFACE,
        ip: "#{BASE_PUB_IP}.#{START_IP + i}",
        netmask: PUB_NET_MASK
      
      node.vm.network "private_network",
        #virtualbox__intnet: "vboxnet0rivnetk0s",
        ip: "#{BASE_PRIV_IP}.#{START_IP + i}",
        netmask: PRIV_NET_MASK
  
      # Script provisioning
      node.vm.provision "shell", inline: "echo Starting configuration of #{BASE_NAME}-#{i}"
      
      node.vm.provision "shell", inline: "sudo apt update"
      
      node.vm.provision "shell", path: "scripts/add_routes.sh", args: [GATEWAY_IP, NAMESERVER_IP]
      node.vm.provision "shell", path: "scripts/install_curl.sh"
      node.vm.provision "shell", path: "scripts/list_interfaces.sh"
      
      node.vm.provision "shell", path: "scripts/config_ssh_root.sh"
      
      node.vm.provision "shell", inline: "sudo apt update"
      node.vm.provision "shell", inline: "echo All scripts have been executed. Hello #{BASE_NAME}-#{i}."
    end        
  end
end

